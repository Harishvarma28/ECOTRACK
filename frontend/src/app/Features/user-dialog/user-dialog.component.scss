/* Style for the form */
.user-dialogue-div
{
  width: 100% !important;
}

.mat-dialog-content {
    padding: 20px; /* Add padding around dialog content */
    width: 100% !important;
  }
  
  .form-field {
    width: 100% !important; /* Make form fields take the full width */
    margin-bottom: 16px; /* Add margin between fields */
  }
  // .mat-form-field {
  //   min-width: 100% !important;
  // }
  ::ng-deep .mat-mdc-form-field
  {
    width: 100% !important;
  }

.user-form {
    display: flex;
    flex-direction: column; /* Vertical layout */
    gap: 16px; /* Space between form fields */
  }
  
  /* Style for buttons */
  .cancel-button,
  .confirm-button {
    min-width: 100px; /* Minimum width for buttons */
    background-color: #f44336; /* Red color for cancel button */
    color: white; /* Text color */
    border-radius: 4px; /* Rounded corners */
    padding: 8px 16px; /* Padding for buttons */
    text-transform: uppercase; /* Uppercase text */
    transition: background-color 0.3s ease; /* Smooth transition */
  }
  
  /* Style for the confirm button */
  .confirm-button {
    background-color: #3f51b5; /* Blue color for confirm button */
  }
  
  /* Hover effects for buttons */
  .cancel-button:hover {
    background-color: #c62828; /* Darker red on hover */
  }
  
  .confirm-button:hover {
    background-color: #303f9f; /* Darker blue on hover */
  }
  
  /* Delete confirmation text styling */
  p {
    color: red; /* Style for delete confirmation text */
    text-align: center; /* Center text */
  }
  .but-div
  {
    width: 100%;
    justify-content: space-between;
    padding: 3%;
  }
  .but-cancel
  {
    border: red 1px solid;
    width: 30%;
    padding: 2%;
    color: red !important;
    font-size: medium;
    border-radius: 6px;
  }
  .but-confirm
  {
    border: green 1px solid;
    width: 30%;
    padding: 2%;
    color: green !important;
    background-color: white !important;
    font-size: medium;
    border-radius: 6px;
  }
  
  

  /* Fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Fade-out animation */
@keyframes fadeOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.9);
  }
}

/* Apply animation on dialog entry and exit */
.mat-dialog-container {
  animation: fadeIn 300ms ease-out, fadeOut 200ms ease-in;
}